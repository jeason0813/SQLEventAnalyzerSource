/*
Copyright (C) 2017 Lars Hove Christiansen
http://virtcore.com

This file is a part of SQL Event Analyzer

	SQL Event Analyzer is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	SQL Event Analyzer is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with SQL Event Analyzer. If not, see <http://www.gnu.org/licenses/>.
*/

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQLEventAnalyzer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SQLEventAnalyzer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] _7za {
            get {
                object obj = ResourceManager.GetObject("_7za", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap application_form_add {
            get {
                object obj = ResourceManager.GetObject("application_form_add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap application_form_delete {
            get {
                object obj = ResourceManager.GetObject("application_form_delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_left {
            get {
                object obj = ResourceManager.GetObject("arrow_left", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_right {
            get {
                object obj = ResourceManager.GetObject("arrow_right", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_rotate_clockwise_small {
            get {
                object obj = ResourceManager.GetObject("arrow_rotate_clockwise_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_rotate_clockwise_small1 {
            get {
                object obj = ResourceManager.GetObject("arrow_rotate_clockwise_small1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap clock_small {
            get {
                object obj = ResourceManager.GetObject("clock_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cmd_small {
            get {
                object obj = ResourceManager.GetObject("cmd_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cog_small {
            get {
                object obj = ResourceManager.GetObject("cog_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap columns_small {
            get {
                object obj = ResourceManager.GetObject("columns_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap control_pause {
            get {
                object obj = ResourceManager.GetObject("control_pause", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap control_stop {
            get {
                object obj = ResourceManager.GetObject("control_stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [master]
        ///
        ///if not exists (select d.* from sys.databases d where d.name = &apos;{0}&apos;)
        ///begin
        ///	create database [{0}]
        ///	alter database [{0}] set recovery simple
        ///end
        ///.
        /// </summary>
        internal static string CreateDatabase {
            get {
                return ResourceManager.GetString("CreateDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if exists (select * from sys.server_event_sessions e where e.name = &apos;{0}&apos;)
        ///begin
        ///	drop event session [{0}] on server
        ///end
        ///
        ///create event session [{0}] on server
        ///add event sqlserver.rpc_completed
        ///(
        ///	action (sqlserver.session_id)
        ///	where sqlserver.not_equal_i_sql_unicode_string ([statement], N&apos;exec sp_reset_connection&apos;)
        ///)
        ///, add event sqlserver.sql_batch_completed
        ///(
        ///	action (sqlserver.session_id)
        ///	where not sqlserver.like_i_sql_unicode_string(sqlserver.sql_text, N&apos;{2}%&apos;)
        ///	and sqlserver.not_equal_i_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateEventSession {
            get {
                return ResourceManager.GetString("CreateEventSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[GetLogParameter]
        ///(
        ///	@input nvarchar(4000),
        ///	@position int
        ///)
        ///returns nvarchar(4000)
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[GetLogParameter]
        ///.
        /// </summary>
        internal static string CreateGetLogParameter {
            get {
                return ResourceManager.GetString("CreateGetLogParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[GetRegEx]
        ///(
        ///	@input nvarchar(4000),
        ///	@regExPattern nvarchar(4000)
        ///)
        ///returns nvarchar(4000)
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[GetRegEx]
        ///.
        /// </summary>
        internal static string CreateGetRegEx {
            get {
                return ResourceManager.GetString("CreateGetRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[GetStoredProcedureName]
        ///(
        ///	@input nvarchar(4000),
        ///	@occurrence int
        ///)
        ///returns nvarchar(4000)
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[GetStoredProcedureName]
        ///.
        /// </summary>
        internal static string CreateGetStoredProcedureName {
            get {
                return ResourceManager.GetString("CreateGetStoredProcedureName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[GetStoredProcedureParameter]
        ///(
        ///	@input nvarchar(4000),
        ///	@position int,
        ///	@occurrence int
        ///)
        ///returns nvarchar(4000)
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[GetStoredProcedureParameter]
        ///.
        /// </summary>
        internal static string CreateGetStoredProcedureParameter {
            get {
                return ResourceManager.GetString("CreateGetStoredProcedureParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///create nonclustered index [ix_FileName_asc] on dbo.[{1}] ([FileName] asc) with (fillfactor = 100)
        ///create nonclustered index [ix_FileName_desc] on dbo.[{1}] ([FileName] desc) with (fillfactor = 100)
        ///
        ///create nonclustered index [ix_Type_asc] on dbo.[{1}] ([type] asc) with (fillfactor = 100)
        ///create nonclustered index [ix_Type_desc] on dbo.[{1}] ([type] desc) with (fillfactor = 100)
        ///
        ///create nonclustered index [ix_SPID_asc] on dbo.[{1}] ([SPID] asc) with (fillfactor = 100)
        ///create nonclustered  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateIndexes {
            get {
                return ResourceManager.GetString("CreateIndexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[MatchLogParameter]
        ///(
        ///	@input nvarchar(4000),
        ///	@position int,
        ///	@value nvarchar(4000)
        ///)
        ///returns bit
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[MatchLogParameter]
        ///.
        /// </summary>
        internal static string CreateMatchLogParameter {
            get {
                return ResourceManager.GetString("CreateMatchLogParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[MatchRegEx]
        ///(
        ///	@input nvarchar(4000),
        ///	@regExPattern nvarchar(4000)
        ///)
        ///returns bit
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[MatchRegEx]
        ///.
        /// </summary>
        internal static string CreateMatchRegEx {
            get {
                return ResourceManager.GetString("CreateMatchRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[MatchStoredProcedureName]
        ///(
        ///	@input nvarchar(4000),
        ///	@name nvarchar(4000),
        ///	@occurrence int
        ///)
        ///returns bit
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[MatchStoredProcedureName]
        ///.
        /// </summary>
        internal static string CreateMatchStoredProcedureName {
            get {
                return ResourceManager.GetString("CreateMatchStoredProcedureName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create function [dbo].[MatchStoredProcedureParameter]
        ///(
        ///	@input nvarchar(4000),
        ///	@position int,
        ///	@value nvarchar(4000),
        ///	@occurrence int
        ///)
        ///returns bit
        ///as
        ///external name [SQLEventAnalyzerCLR].[UserDefinedFunctions].[MatchStoredProcedureParameter]
        ///.
        /// </summary>
        internal static string CreateMatchStoredProcedureParameter {
            get {
                return ResourceManager.GetString("CreateMatchStoredProcedureParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if exists (select * from dbo.sysobjects where id = object_id(N&apos;dbo.[{1}]&apos;) and objectproperty(id, N&apos;IsUserTable&apos;) = 1)
        ///begin
        ///	drop table dbo.[{2}]
        ///end
        ///
        ///create table dbo.[{2}]
        ///(
        ///	ID int identity(1, 1) not null,
        ///	FileName varchar(255) not null,
        ///	Type varchar(44) not null,
        ///	TextData varchar(max) not null,
        ///	SPID int not null,
        ///	Duration bigint not null,
        ///	StartTime DateTime not null,
        ///	Reads bigint not null,
        ///	Writes bigint not null,
        ///	CPU bigint not null,
        ///	Rows bigint not null
        ///)
        ///
        ///cr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateTempTable {
            get {
                return ResourceManager.GetString("CreateTempTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @TraceID int
        ///declare @rc int
        ///declare @maxfilesize bigint
        ///set @maxfilesize = 50000
        ///
        ///exec @rc = sp_trace_create @TraceID output, 2, N&apos;{0}&apos;, @maxfilesize, null
        ///select @TraceID TraceID, @rc ReturnCode
        ///.
        /// </summary>
        internal static string CreateTrace {
            get {
                return ResourceManager.GetString("CreateTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap database {
            get {
                object obj = ResourceManager.GetObject("database", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap database_key_small {
            get {
                object obj = ResourceManager.GetObject("database_key_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap database_repeat_entry_small {
            get {
                object obj = ResourceManager.GetObject("database_repeat_entry_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] DataViewer {
            get {
                object obj = ResourceManager.GetObject("DataViewer", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{1}]
        ///
        ///if exists (select * from sys.tables t where t.name = &apos;TraceData_{2}&apos;)
        ///begin
        ///	drop table dbo.[TraceData_{0}]
        ///end
        ///.
        /// </summary>
        internal static string DeleteSession {
            get {
                return ResourceManager.GetString("DeleteSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if exists (select i.* from sys.indexes i where i.object_id = object_id(N&apos;dbo.[{1}]&apos;) and i.name = N&apos;ix_CS&apos;)
        ///begin
        ///	alter index [ix_CS] on dbo.[{2}] disable
        ///end
        ///.
        /// </summary>
        internal static string DisableColumnStoreIndex {
            get {
                return ResourceManager.GetString("DisableColumnStoreIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap disk {
            get {
                object obj = ResourceManager.GetObject("disk", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if exists (select * from sys.tables t where t.name = &apos;TraceData_{1}&apos;)
        ///begin
        ///	select 1 Result
        ///end
        ///else
        ///begin
        ///	select 0 Result
        ///end
        ///.
        /// </summary>
        internal static string DoesTempTableExist {
            get {
                return ResourceManager.GetString("DoesTempTableExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap drive_web_small {
            get {
                object obj = ResourceManager.GetObject("drive_web_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if exists (select * from sys.server_event_sessions e where e.name = &apos;{0}&apos;)
        ///begin
        ///	drop event session [{0}] on server
        ///end
        ///.
        /// </summary>
        internal static string DropEventSession {
            get {
                return ResourceManager.GetString("DropEventSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if exists (select * from dbo.sysobjects where id = object_id(N&apos;dbo.[{1}]&apos;) and objectproperty(id, N&apos;IsUserTable&apos;) = 1)
        ///begin
        ///	drop table dbo.[{2}]
        ///end
        ///.
        /// </summary>
        internal static string DropTempTable {
            get {
                return ResourceManager.GetString("DropTempTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///update dbo.[{2}]
        ///set [{1}] = &apos;&apos;
        ///.
        /// </summary>
        internal static string EmptyColumns {
            get {
                return ResourceManager.GetString("EmptyColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if exists (select i.* from sys.indexes i where i.object_id = object_id(N&apos;dbo.[{1}]&apos;) and i.name = N&apos;ix_CS&apos;)
        ///begin
        ///	alter index [ix_CS] on dbo.[{2}] rebuild
        ///end
        ///.
        /// </summary>
        internal static string EnableColumnStoreIndex {
            get {
                return ResourceManager.GetString("EnableColumnStoreIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if (select databaseproperty(db_name(), N&apos;IsFullTextEnabled&apos;)) != 1
        ///begin
        ///	exec dbo.sp_fulltext_database N&apos;enable&apos;
        ///end
        ///
        ///if not exists (select * from dbo.sysfulltextcatalogs where name = N&apos;SQLEventAnalyzerFullText&apos;)
        ///begin
        ///	exec dbo.sp_fulltext_catalog N&apos;SQLEventAnalyzerFullText&apos;, N&apos;create&apos;
        ///end
        ///.
        /// </summary>
        internal static string EnableFullText {
            get {
                return ResourceManager.GetString("EnableFullText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{8}]
        ///
        ///declare @PageNum int
        ///declare @PageSize int
        ///
        ///set @PageNum = {0}
        ///set @PageSize = {1}
        ///
        ///{4}{5}
        ///select r.RowNum, r.RowId
        ///into dbo.#temp
        ///from
        ///(
        ///	select row_number() over(order by {2}, v.RowId) RowNum, v.RowId
        ///	from
        ///	(
        ///		select t.ID RowId, {10}
        ///		from dbo.[{9}] t
        ///		where 1 = 1
        ///		{3}
        ///	) v
        ///) r
        ///{11}where r.RowNum between (@PageNum - 1) * @PageSize + 1 and @PageNum * @PageSize
        ///
        ///select t.*
        ///into dbo.[TraceData_{12}]
        ///from dbo.#temp t1
        ///inner join dbo.[{9}] t on t.ID = t1.RowId
        ///order  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExportSessionToSession {
            get {
                return ResourceManager.GetString("ExportSessionToSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap find_small {
            get {
                object obj = ResourceManager.GetObject("find_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder {
            get {
                object obj = ResourceManager.GetObject("folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap font {
            get {
                object obj = ResourceManager.GetObject("font", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///select distinct t.[{1}]
        ///from dbo.[{2}] t
        ///order by t.[{1}]
        ///.
        /// </summary>
        internal static string GetCustomColumnsInfo {
            get {
                return ResourceManager.GetString("GetCustomColumnsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///select s.spid, rtrim(convert(varchar(36), replace(s.program_name, &apos;{1} - &apos;, &apos;&apos;))) sessionid
        ///from sys.sysprocesses s
        ///where s.program_name like &apos;{1} - %&apos;
        ///.
        /// </summary>
        internal static string GetExistingConnections {
            get {
                return ResourceManager.GetString("GetExistingConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///declare @count int
        ///
        ///{5}{6}
        ///select @count = count(t.ID)
        ///from dbo.[{3}] t
        ///where 1 = 1
        ///{1}
        ///
        ///if @count &lt;= {4}
        ///begin	
        ///	select t.ID, t.TextData, t.Duration, t.StartTime, t.Reads, t.Writes, t.CPU, t.Rows{2}
        ///	from dbo.[{3}] t
        ///	where 1 = 1
        ///	{1}
        ///	order by t.StartTime
        ///
        ///	select @count NumberOfRows
        ///end
        ///else
        ///begin
        ///	select 0 Dummy
        ///
        ///	select @count NumberOfRows
        ///end
        ///{7}{8}
        ///.
        /// </summary>
        internal static string GetGraphData {
            get {
                return ResourceManager.GetString("GetGraphData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///select top 1 t.StartTime
        ///from dbo.[{1}] t
        ///order by t.StartTime desc
        ///.
        /// </summary>
        internal static string GetLastEventStartTime {
            get {
                return ResourceManager.GetString("GetLastEventStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///select top 1 t.FileName
        ///from dbo.[TraceData_{1}] t
        ///order by t.ID desc
        ///.
        /// </summary>
        internal static string GetLastImportedFileName {
            get {
                return ResourceManager.GetString("GetLastImportedFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///select i.column_name
        ///from information_schema.columns i
        ///where i.table_name = &apos;{1}&apos; and i.table_schema = &apos;dbo&apos;
        ///and i.column_name not in (&apos;ID&apos;, &apos;FileName&apos;, &apos;Type&apos;, &apos;TextData&apos;, &apos;SPID&apos;, &apos;Duration&apos;, &apos;StartTime&apos;, &apos;Reads&apos; ,&apos;Writes&apos;, &apos;CPU&apos;, &apos;Rows&apos;)
        ///.
        /// </summary>
        internal static string GetNonDefaultColumnNames {
            get {
                return ResourceManager.GetString("GetNonDefaultColumnNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///declare @objectSourceName varchar(255)
        ///set @objectSourceName = &apos;{1}&apos;
        ///
        ///declare @objectTargetName varchar(255)
        ///set @objectTargetName = &apos;{2}&apos;
        ///
        ///declare @numberofrows int
        ///set @numberofrows = 0
        ///
        ///declare @i int
        ///set @i = 1
        ///
        ///declare @numberofrows1 int
        ///declare @i1 int
        ///
        ///declare @indexname varchar(255)
        ///declare @indextype varchar(255)
        ///declare @isunique bit
        ///declare @fillfactor tinyint
        ///declare @colname varchar(255)
        ///declare @is_descending_key bit
        ///
        ///create table dbo.#temp1
        ///(
        ///	id int uniqu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetObjectScript_IX {
            get {
                return ResourceManager.GetString("GetObjectScript_IX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///;with cte as
        ///(
        ///	select t.name TableName, sum(s.used_page_count) used_pages_count, sum
        ///	(
        ///		case
        ///			when i.index_id &lt; 2 then in_row_data_page_count + lob_used_page_count + row_overflow_used_page_count
        ///			else lob_used_page_count + row_overflow_used_page_count
        ///		end
        ///	) pages, t.create_date
        ///	from sys.dm_db_partition_stats s
        ///	inner join sys.tables t on t.object_id = s.object_id
        ///	inner join sys.indexes i on i.object_id = t.object_id and s.index_id = i.index_id
        ///	group by t.name, t.create_ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetSessionInfo {
            get {
                return ResourceManager.GetString("GetSessionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{8}]
        ///
        ///declare @PageNum int
        ///declare @PageSize int
        ///
        ///set @PageNum = {0}
        ///set @PageSize = {1}
        ///
        ///{4}{5}
        ///select {13}
        ///from
        ///(
        ///	select row_number() over(order by {2}) RowNum, {12}
        ///	from
        ///	(
        ///		select count(t.ID) TotalCount
        ///		, min(t.Duration) MinDuration, max(t.Duration) MaxDuration, avg(t.Duration) AvgDuration, round(stdev(t.Duration), 0) DevDuration, round(var(t.Duration), 0) VarDuration, sum(t.Duration) SumDuration
        ///		, min(t.Reads) MinReads, max(t.Reads) MaxReads, avg(t.Reads) AvgReads, round(st [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetStatistics {
            get {
                return ResourceManager.GetString("GetStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{8}]
        ///
        ///declare @PageNum int
        ///declare @PageSize int
        ///
        ///set @PageNum = {0}
        ///set @PageSize = {1}
        ///
        ///{4}{5}
        ///select r.RowNum, r.RowId
        ///into dbo.#temp
        ///from
        ///(
        ///	select row_number() over(order by {2}, v.RowId) RowNum, v.RowId
        ///	from
        ///	(
        ///		select t.ID RowId, {10}
        ///		from dbo.[{9}] t
        ///		where 1 = 1
        ///		{3}
        ///	) v
        ///) r
        ///where r.RowNum between (@PageNum - 1) * @PageSize + 1 and @PageNum * @PageSize
        ///
        ///select {11}
        ///from dbo.#temp t1
        ///inner join dbo.[{9}] t on t.ID = t1.RowId
        ///order by t1.RowNum
        ///
        ///if {12} = 1
        ///b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetTraceData {
            get {
                return ResourceManager.GetString("GetTraceData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///create table dbo.#temp
        ///(
        ///	TotalRows int not null,
        ///	MinID int null,
        ///	MaxID int null,
        ///	MinSPID int null,
        ///	MaxSPID int null,
        ///	MinDuration bigint null,
        ///	MaxDuration bigint null,
        ///	MinStartTime datetime null,
        ///	MaxStartTime datetime null,
        ///	MinReads bigint null,
        ///	MaxReads bigint null,
        ///	MinWrites bigint null,
        ///	MaxWrites bigint null,
        ///	MinCPU bigint null,
        ///	MaxCPU bigint null,
        ///	MinRows bigint null,
        ///	MaxRows bigint null
        ///)
        ///
        ///insert into dbo.#temp (TotalRows)
        ///select count(*) TotalRows
        ///fr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetTraceDataInfo {
            get {
                return ResourceManager.GetString("GetTraceDataInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if exists (select o.* from dbo.sysobjects o where o.id = object_id(N&apos;[dbo].[GetRegEx]&apos;) and o.xtype  = N&apos;FS&apos;)
        ///drop function [dbo].[GetRegEx]
        ///
        ///if exists (select o.* from dbo.sysobjects o where o.id = object_id(N&apos;[dbo].[MatchRegEx]&apos;) and o.xtype  = N&apos;FS&apos;)
        ///drop function [dbo].[MatchRegEx]
        ///
        ///if exists (select o.* from dbo.sysobjects o where o.id = object_id(N&apos;[dbo].[GetStoredProcedureName]&apos;) and o.xtype  = N&apos;FS&apos;)
        ///drop function [dbo].[GetStoredProcedureName]
        ///
        ///if exists (select o.* from dbo.s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HandleCLR {
            get {
                return ResourceManager.GetString("HandleCLR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///set transaction isolation level {4}
        ///
        ///update dbo.[{3}]
        ///set {1}
        ///{2}
        ///.
        /// </summary>
        internal static string HandleColumns {
            get {
                return ResourceManager.GetString("HandleColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap help_small {
            get {
                object obj = ResourceManager.GetObject("help_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] ICSharpCode_TextEditor {
            get {
                object obj = ResourceManager.GetObject("ICSharpCode_TextEditor", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///if (select count(*) from sys.fn_xe_file_target_read_file(&apos;{1}&apos;, null, null, null) x) = 0
        ///begin
        ///	return
        ///end
        ///
        ///insert into dbo.[{3}] (FileName, Type, TextData, SPID, Duration, StartTime, Reads, Writes, CPU, Rows)
        ///select &apos;{2}&apos;
        ///, replace(replace(event_xml.value(&apos;(./@name)&apos;, &apos;varchar(44)&apos;), &apos;rpc_completed&apos;, &apos;RPC:Completed&apos;), &apos;sql_batch_completed&apos;, &apos;SQL:BatchCompleted&apos;) Type
        ///, isnull(event_xml.value(&apos;(./data[@name=&quot;batch_text&quot;]/value)[1]&apos;, &apos;varchar(max)&apos;)
        ///, event_xml.value(&apos;(./data[@name=&quot;sta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ImportExtendedEventsFile {
            get {
                return ResourceManager.GetString("ImportExtendedEventsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///insert into dbo.[{2}] (FileName, Type, TextData, SPID, Duration, StartTime, Reads, Writes, CPU, Rows{3})
        ///select t.FileName, t.Type, t.TextData, t.SPID, t.Duration, t.StartTime, t.Reads, t.Writes, t.CPU, t.Rows{4}
        ///from dbo.[TraceData_{1}] t
        ///order by t.FileName, t.StartTime
        ///.
        /// </summary>
        internal static string ImportSession {
            get {
                return ResourceManager.GetString("ImportSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///insert into dbo.[{3}] (FileName, Type, TextData, SPID, Duration, StartTime, Reads, Writes, CPU, Rows)
        ///select &apos;{2}&apos;, e.name Type, convert(varchar(max), t.TextData), t.SPID, t.Duration / 1000 Duration, t.StartTime, isnull(t.Reads, -1) Reads, isnull(t.Writes, -1) Writes, isnull(t.CPU, -1) CPU, isnull(t.RowCounts, -1) Rows
        ///from fn_trace_gettable(&apos;{1}.trc&apos;, default) t
        ///inner join sys.trace_events e on e.trace_event_id = t.EventClass
        ///where t.TextData is not null and t.StartTime is not null and t.E [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ImportTraceFile {
            get {
                return ResourceManager.GetString("ImportTraceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap information {
            get {
                object obj = ResourceManager.GetObject("information", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [master]
        ///
        ///declare @sessionIdToKill char(35)
        ///set @sessionIdToKill = &apos;{0}&apos;
        ///
        ///declare @numberOfRows int
        ///declare @i int
        ///declare @spid smallint
        ///declare @spidText varchar(10)
        ///
        ///create table dbo.#temp
        ///(
        ///	id int identity(1, 1) not null,
        ///	spid smallint not null,
        ///	program_name nchar(128) not null
        ///)
        ///
        ///insert into dbo.#temp (spid, program_name)
        ///select s.spid, s.program_name
        ///from sys.sysprocesses s
        ///where s.program_name like &apos;{1} - &apos; + @sessionIdToKill + &apos;%&apos;
        ///
        ///set @numberOfRows = @@rowcount
        ///
        ///set @ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KillConnections {
            get {
                return ResourceManager.GetString("KillConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Profiler {
            get {
                object obj = ResourceManager.GetObject("Profiler", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///exec dbo.sp_rename &apos;TraceData_{1}&apos;, &apos;TraceData_{2}&apos;
        ///.
        /// </summary>
        internal static string RenameTable {
            get {
                return ResourceManager.GetString("RenameTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap report_edit_small {
            get {
                object obj = ResourceManager.GetObject("report_edit_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap star {
            get {
                object obj = ResourceManager.GetObject("star", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap star1 {
            get {
                object obj = ResourceManager.GetObject("star1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}
        ///alter event session [{0}] on server state = start
        ///.
        /// </summary>
        internal static string StartEventSessionRecording {
            get {
                return ResourceManager.GetString("StartEventSessionRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///alter fulltext index on dbo.[{1}] set change_tracking auto
        ///exec dbo.sp_fulltext_catalog N&apos;SQLEventAnalyzerFullText&apos;, N&apos;start_incremental&apos;
        ///.
        /// </summary>
        internal static string StartFullTextPopulation {
            get {
                return ResourceManager.GetString("StartFullTextPopulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}
        ///declare @on bit
        ///set @on = 1
        ///
        ///-- SQL:BatchCompleted
        ///exec sp_trace_setevent {0}, 12, 1, @on -- TextData
        ///exec sp_trace_setevent {0}, 12, 13, @on -- Duration
        ///exec sp_trace_setevent {0}, 12, 14, @on -- StartTime
        ///exec sp_trace_setevent {0}, 12, 16, @on -- Reads
        ///exec sp_trace_setevent {0}, 12, 17, @on -- Writes
        ///exec sp_trace_setevent {0}, 12, 18, @on -- CPU
        ///exec sp_trace_setevent {0}, 12, 48, @on -- Rows
        ///
        ///-- RPC:Completed
        ///exec sp_trace_setevent {0}, 10, 1, @on -- TextData
        ///exec sp_trace_setevent  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StartTraceRecording {
            get {
                return ResourceManager.GetString("StartTraceRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop_small {
            get {
                object obj = ResourceManager.GetObject("stop_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if exists (select * from ::fn_trace_getinfo(0) where left(convert(nvarchar(245), value), len(&apos;{0}&apos;)) = &apos;{0}&apos;)
        ///begin
        ///	declare @TraceID int
        ///
        ///	select @TraceID = traceid
        ///	from ::fn_trace_getinfo(0)
        ///	where left(convert(nvarchar(245), value), len(&apos;{0}&apos;)) = &apos;{0}&apos;
        ///
        ///	exec sp_trace_setstatus @TraceID, 0 -- stop trace
        ///	exec sp_trace_setstatus @TraceID, 2 -- delete trace
        ///end
        ///.
        /// </summary>
        internal static string StopDeleteTrace {
            get {
                return ResourceManager.GetString("StopDeleteTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @IsRunning bit
        ///
        ///select @IsRunning = t.IsRunning
        ///from
        ///(
        ///	select case
        ///		when r.create_time is null then 0 else 1
        ///	end IsRunning
        ///	from sys.server_event_sessions s
        ///	left outer join sys.dm_xe_sessions r on r.name = s.name
        ///	where s.name = &apos;{0}&apos;
        ///) t
        ///
        ///if @IsRunning = 1
        ///begin
        ///	alter event session [{0}] on server state = stop
        ///end
        ///.
        /// </summary>
        internal static string StopEventSession {
            get {
                return ResourceManager.GetString("StopEventSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use [{0}]
        ///
        ///alter fulltext index on dbo.[{1}] set change_tracking off
        ///exec dbo.sp_fulltext_catalog N&apos;SQLEventAnalyzerFullText&apos;, N&apos;stop&apos;
        ///.
        /// </summary>
        internal static string StopFullTextPopulation {
            get {
                return ResourceManager.GetString("StopFullTextPopulation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap table_export_small {
            get {
                object obj = ResourceManager.GetObject("table_export_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;root&gt;
        ///	&lt;options&gt;
        ///	&lt;/options&gt;
        ///	&lt;parameters&gt;
        ///	&lt;/parameters&gt;
        ///	&lt;columns&gt;
        ///		&lt;column name=&quot;SPName1&quot; isolationLevel=&quot;Read Uncommitted&quot; input=&quot;where 1 = 1&quot; inputType=&quot;SQL&quot; output=&quot;1&quot; outputType=&quot;StoredProcedureName&quot; hidden=&quot;True&quot; enabled=&quot;True&quot; width=&quot;100&quot; /&gt;
        ///		&lt;column name=&quot;SPName&quot; isolationLevel=&quot;Read Uncommitted&quot; input=&quot;where 1 = 1&quot; inputType=&quot;SQL&quot; output=&quot;replace(SPName1, &apos;dbo.&apos;, &apos;&apos;)&quot; outputType=&quot;SQL&quot; hidden=&quot;False&quot; enabled=&quot;True&quot; width=&quot;100&quot; /&gt;
        ///		&lt;column name=&quot;T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TextDataCleaned {
            get {
                return ResourceManager.GetString("TextDataCleaned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap update {
            get {
                object obj = ResourceManager.GetObject("update", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap XEvent {
            get {
                object obj = ResourceManager.GetObject("XEvent", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
